service: product-service

frameworkVersion: '3'

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-west-1
  stage: dev
  environment:
    DYNAMODB_PRODUCTS_TABLE: 'Products'
    DYNAMODB_STOCK_TABLE: 'Stock'
    SNS_TOPIC_ARN:
      Ref: 'CreateProductTopic'
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:Get*'
            - 'dynamodb:Scan*'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
          Resource:
            - 'arn:aws:dynamodb:eu-west-1:098115224976:table/Products'
            - 'arn:aws:dynamodb:eu-west-1:098115224976:table/Stock'
        - Effect: Allow
          Action:
            - sqs:*
          Resource:
            Fn::GetAtt: [ catalogQueue, Arn ]
        - Effect: Allow
          Action:
            - sns:*
          Resource:
            Ref: CreateProductTopic

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: products
          method: get
          cors: true
  getProductsById:
    handler: handler.getProductsById
    events:
      - http:
          path:  products/{productId}
          method: get
          cors: true
          request:
            parameters:
              paths:
                productId: true
  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: products
          method: post
          cors: true
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn: 'arn:aws:sqs:eu-west-1:098115224976:catalogQueue'

resources:
  Resources:
    catalogQueue:
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: catalogQueue
    CreateProductTopic:
      Type: 'AWS::SNS::Topic'
      Properties:
        TopicName: createProductTopic
    EmailSubscriptionForCreateProductTopic:
      Type: 'AWS::SNS::Subscription'
      Properties:
        Endpoint: artyom.virshych@gmail.com
        Protocol: email
        TopicArn: { "Ref": 'CreateProductTopic' }

#resources:
#  Resources:
#    Products:
#      Type: AWS::DynamoDB::Table
#      Properties:
#        TableName: products
#        AttributeDefinitions:
#          - AttributeName: id
#            AttributeType: S
#        BillingMode: PAY_PER_REQUEST
#        KeySchema:
#          - AttributeName: id
#            KeyType: HASH
#    Stock:
#      Type: AWS::DynamoDB::Table
#      Properties:
#        TableName: stock
#        AttributeDefinitions:
#          - AttributeName: product_id
#            AttributeType: S
#        BillingMode: PAY_PER_REQUEST
#        KeySchema:
#          - AttributeName: product_id
#            KeyType: HASH
